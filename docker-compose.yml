version: "3.4"
services:
  api:
    container_name: "eoffice.api"
    build:
      context: ./
      target: eoffice_php
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - ./:/srv/api
      - /srv/api/storage
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - eoffice
    environment:
      WWWUSER: '${WWWUSER}'
      WWWGROUP: "${WWWGROUP}"
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${XDEBUG_CONFIG:-client_host=host.docker.internal}'

  database:
    container_name: "eoffice.db"
    image: 'mariadb:10'
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - 'sailmariadb:/var/lib/mysql'
    networks:
      - eoffice
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
      retries: 3
      timeout: 5s

  pwa:
    container_name: eoffice.pwa
    build:
      context: ./pwa
      target: eoffice_pwa_dev
    volumes:
      - ./:/usr/src/pwa:rw
    networks:
      - eoffice
    ports:
      - "8080:8080"
      - "3000:3000"
  caddy:
    container_name: "eoffice.caddy"
    build:
      context: ./
      target: eoffice_caddy
    depends_on:
      - api
      - pwa
    environment:
      PWA_UPSTREAM: pwa:8080
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeMe!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeMe!}
    restart: unless-stopped
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./public:/srv/api/public:ro
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
      - ./:/srv/api
    networks:
      - eoffice
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

  chrome:
    container_name: "eoffice.chrome"
    image: selenium/standalone-chrome
    networks:
      - eoffice

networks:
  eoffice:
    driver: bridge

volumes:
  sailmariadb:
  php_socket:
  caddy_data:
  caddy_config:




