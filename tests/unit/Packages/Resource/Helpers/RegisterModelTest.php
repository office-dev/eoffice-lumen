<?php

/*
 * This file is part of the EOffice project.
 *
 * (c) Anthonius Munthi <https://itstoni.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace Tests\EOffice\Packages\Resource\Helpers;

use Doctrine\ORM\Mapping\ClassMetadata;
use EOffice\Packages\Resource\Exceptions\ResourceException;
use EOffice\Packages\Testing\TestCase;
use Fixtures\EOffice\Fixtures;
use Fixtures\EOffice\Model\Foo;
use LaravelDoctrine\ORM\Facades\EntityManager;
use function register_model;

/**
 * @covers \register_model
 * @covers \EOffice\Packages\Resource\Exceptions\ResourceException
 */
class RegisterModelTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function test_it_should_register_model(): void
    {
        register_model('Fixtures\\Model', [
            'type' => 'annotation',
            'path' => Fixtures::getModelPath(),
        ]);

        $this->assertInstanceOf(
            ClassMetadata::class,
            EntityManager::getClassMetadata(Foo::class)
        );
    }

    public function test_it_throws_exception_on_undefined_path(): void
    {
        $this->expectExceptionObject($e = ResourceException::nullModelPath());
        $this->expectExceptionMessage($e->getMessage());

        register_model('Fixtures\\Model', [
            'type' => 'annotation',
        ]);
    }

    public function test_it_throws_exception_on_non_existent_path(): void
    {
        $this->expectExceptionObject($e = ResourceException::modelDirNotExists('foo/bar'));
        $this->expectExceptionMessage($e->getMessage());

        register_model('Fixtures\\Model', [
            'type' => 'annotation',
            'path' => 'foo/bar',
        ]);
    }
}
